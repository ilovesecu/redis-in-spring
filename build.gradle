plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//chat
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	//mongoDB
	implementation 'org.springframework.boot:spring-boot-starter-webflux'  // WebFlux 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive' // Reactive MongoDB 추가
	//kafka
	implementation 'org.springframework.kafka:spring-kafka'

}

tasks.named('test') {
	useJUnitPlatform()
}
